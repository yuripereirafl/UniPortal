services:
  backend:
    build: ./backend
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    environment:
      # Quando não houver variável DB_HOST no arquivo .env, usar por padrão
      # o banco externo na VM 192.168.1.37. Para evitar confusão entre a
      # porta exposta no HOST e a porta interna do container, usamos duas
      # variáveis: HOST_DB_PORT (mapeamento host) e INTERNAL_DB_PORT (porta
      # que o Postgres escuta dentro da rede Docker). Por padrão a porta
      # interna é 5432.
      - DB_HOST=${DB_HOST:-192.168.1.37}
      - DB_PORT=${INTERNAL_DB_PORT:-5432}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-yourpassword}
      - DB_NAME=${DB_NAME:-intelix_rh}
    depends_on:
      - db
    networks:
      - system-ti-network

  frontend:
    build: ./frontend
    ports:
      - "${FRONTEND_PORT:-8080}:8080"
    environment:
      # Forçar URL da API apontando para a VM pública/privada onde o backend estará
      - VUE_APP_API_URL=http://192.168.1.37:8000
      # Vite expects env vars prefixed with VITE_ at build/runtime
      - VITE_API_URL=http://192.168.1.37:8000
    depends_on:
      - backend
    networks:
      - system-ti-network

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=${DB_NAME:-intelix_rh}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-yourpassword}
    ports:
      # Mapear porta do host para a porta interna 5432. Use HOST_DB_PORT
      # se precisar expor outra porta no host (ex: 5433:5432).
      - "${HOST_DB_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - system-ti-network

volumes:
  postgres_data:

networks:
  system-ti-network:
    driver: bridge
